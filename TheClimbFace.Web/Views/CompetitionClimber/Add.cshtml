@using TheClimbFace.Web.ViewModels.Competition.Climber
@model AddClimberInputModel

<div class="container mt-4">
    <div class="card shadow-lg border-0 rounded-lg">
        <div class="card-header bg-primary text-white py-3">
            <div class="d-flex justify-content-between align-items-center">
                <h3 class="mb-0">Add New Climber</h3>
                <button class="btn btn-light" onclick="history.back()">
                    <i class="fas fa-arrow-left"></i> Back
                </button>
            </div>
        </div>

        <div class="card-body">
            <form asp-controller="CompetitionClimber" asp-action="Add" method="post">
                <input type="hidden" asp-for="CompetitionId" />
                
                <div class="row g-3">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="FirstName" class="form-label">First Name</label>
                            <input asp-for="FirstName" class="form-control" />
                            <span asp-validation-for="FirstName" class="text-danger"></span>
                        </div>
                    </div>
                    
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="MiddleName" class="form-label">Middle Name</label>
                            <input asp-for="MiddleName" class="form-control" />
                            <span asp-validation-for="MiddleName" class="text-danger"></span>
                        </div>
                    </div>
                    
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="LastName" class="form-label">Last Name</label>
                            <input asp-for="LastName" class="form-control" />
                            <span asp-validation-for="LastName" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="ClubName" class="form-label">Club Name</label>
                            <input asp-for="ClubName" class="form-control" />
                            <span asp-validation-for="ClubName" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Gender" class="form-label">Gender</label>
                            <select asp-for="Gender" class="form-select">
                                <option value="">Select Gender</option>
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                            </select>
                            <span asp-validation-for="Gender" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-12">
                        <label class="form-label">Date of Birth</label>
                        <div class="d-flex gap-2 align-items-center">
                            <!-- Dropdown for Day -->
                            <select class="form-control form-control-sm" id="BirthDay" name="BirthDay" style="width: auto;">
                                <option value="">Day</option>
                                @for (int day = 1; day <= 31; day++)
                                {
                                    <option value="@day">@day</option>
                                }
                            </select>

                            <!-- Dropdown for Month -->
                            <select class="form-control form-control-sm" id="BirthMonth" name="BirthMonth" style="width: auto;" onchange="updateBirthDays()">
                                <option value="">Month</option>
                                @foreach (var month in System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.MonthNames.Where(m => !string.IsNullOrEmpty(m)))
                                {
                                    <option value="@month">@month</option>
                                }
                            </select>

                            <!-- Dropdown for Year -->
                            <select class="form-control form-control-sm" id="BirthYear" name="BirthYear" style="width: auto;" onchange="updateBirthDays()">
                                <option value="">Year</option>
                                @{
                                    int currentYear = DateTime.Now.Year;
                                    for (int year = currentYear; year >= currentYear - 100; year--)
                                    {
                                        <option value="@year">@year</option>
                                    }
                                }
                            </select>
                        </div>
                        <span asp-validation-for="BirthDay" class="text-danger"></span>
                    </div>
                </div>

                <div class="mt-4">
                    <button type="button" class="btn btn-outline-secondary me-2" onclick="generateRandomData()">
                        <i class="fas fa-dice"></i> Generate Random Test Data
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Add Climber
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    .form-group {
        margin-bottom: 1rem;
    }

    .form-label {
        font-weight: 500;
        margin-bottom: 0.5rem;
    }

    .form-control, .form-select {
        border-radius: 8px;
        border: 1px solid rgba(0,0,0,0.1);
        padding: 0.625rem 1rem;
    }

    .form-control:focus, .form-select:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 0 0.25rem rgba(13,110,253,.25);
    }

    .btn {
        border-radius: 8px;
        padding: 0.625rem 1.25rem;
    }

    .text-danger {
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }
</style>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        function updateBirthDays() {
            const daySelect = document.getElementById("BirthDay");
            const monthSelect = document.getElementById("BirthMonth");
            const yearSelect = document.getElementById("BirthYear");

            const month = monthSelect.selectedIndex;
            const year = parseInt(yearSelect.value) || new Date().getFullYear();

            // Запазване на текущо избрания ден
            const selectedDay = parseInt(daySelect.value);

            // Изчисляване на броя дни в избрания месец и година
            const daysInMonth = new Date(year, month, 0).getDate();

            // Изчистване на съществуващите опции
            daySelect.innerHTML = '<option value="">Day</option>';

            // Добавяне на правилния брой дни
            for (let day = 1; day <= daysInMonth; day++) {
                const option = document.createElement("option");
                option.value = day;
                option.textContent = day;

                // Задаване на избрания ден, ако е валиден
                if (day === selectedDay && day <= daysInMonth) {
                    option.selected = true;
                }

                daySelect.appendChild(option);
            }
        }

        function generateRandomData() {
            // Български имена за момичета
            const femaleFirstNames = [
                "Анна", "Мария", "Елена", "Виктория", "София", "Николета", "Габриела", "Александра",
                "Емилия", "Ивана", "Кристина", "Дария", "Милена", "Радостина", "Стефания", "Теодора"
            ];

            // Български имена за момчета
            const maleFirstNames = [
                "Иван", "Георги", "Стефан", "Николай", "Александър", "Димитър", "Петър", "Мартин",
                "Давид", "Борис", "Виктор", "Кристиян", "Даниел", "Михаил", "Андрей", "Томас"
            ];

            // Български фамилии
            const lastNames = [
                "Петров", "Иванов", "Георгиев", "Димитров", "Стоянов", "Николов", "Тодоров", "Ангелов",
                "Василев", "Стефанов", "Атанасов", "Колев", "Марков", "Попов", "Вълчев", "Димитров"
            ];

            // Български клубове
            const clubs = [
                "Скален Клуб София", "Алпинист София", "Скален Клуб Пловдив", "Вертикал Варна",
                "Скален Клуб Бургас", "Алпинист Стара Загора", "Скален Клуб Русе", "Вертикал Плевен",
                "Скален Клуб Враца", "Алпинист Шумен", "Скален Клуб Сливен", "Вертикал Ямбол",
                "Скален Клуб Хасково", "Алпинист Кърджали", "Скален Клуб Смолян", "Вертикал Благоевград"
            ];

            // Генериране на случайни данни
            const isMale = Math.random() < 0.5;
            const firstName = isMale ? 
                maleFirstNames[Math.floor(Math.random() * maleFirstNames.length)] :
                femaleFirstNames[Math.floor(Math.random() * femaleFirstNames.length)];
            const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];
            const club = clubs[Math.floor(Math.random() * clubs.length)];

            // Генериране на възраст между 7 и 18 години
            const currentYear = new Date().getFullYear();
            const age = Math.floor(Math.random() * 12) + 7; // 7-18 години
            const birthYear = currentYear - age;

            // Генериране на случайна дата през годината
            const birthMonth = Math.floor(Math.random() * 12) + 1;
            const daysInMonth = new Date(birthYear, birthMonth, 0).getDate();
            const birthDay = Math.floor(Math.random() * daysInMonth) + 1;

            // Попълване на полетата
            document.getElementById('FirstName').value = firstName;
            document.getElementById('LastName').value = lastName;
            document.getElementById('ClubName').value = club;
            document.getElementById('Gender').value = isMale ? 'Male' : 'Female';

            // Попълване на датата на раждане
            const monthNames = [
                "January", "February", "March", "April", "May", "June",
                "July", "August", "September", "October", "November", "December"
            ];

            document.getElementById('BirthMonth').value = monthNames[birthMonth - 1];
            document.getElementById('BirthYear').value = birthYear;
            
            // Обновяване на дните след промяна на месеца
            updateBirthDays();
            
            // Задаване на деня след обновяването
            setTimeout(() => {
                document.getElementById('BirthDay').value = birthDay;
            }, 100);

            // Анимация за показване на генерираните данни
            const form = document.querySelector('form');
            form.style.transition = 'all 0.3s ease';
            form.style.transform = 'scale(1.02)';
            setTimeout(() => {
                form.style.transform = 'scale(1)';
            }, 300);
        }

        // Инициализиране на дните при зареждане на страницата
        document.addEventListener('DOMContentLoaded', function() {
            updateBirthDays();
        });
    </script>
}
